const BriefModel = require("../models/BriefModel");

const BriefController = {
  // ‚ûï Cr√©er un brief
  createBrief: async (req, res) => {
    const { title, description, imageUrl, promo_id } = req.body;

    try {
      const briefId = await BriefModel.create(title, description, imageUrl, promo_id);
      res.status(201).json({ message: "Brief cr√©√© avec succ√®s", id: briefId });
    } catch (err) {
      console.error("Erreur lors de la cr√©ation du brief :", err);
      res.status(500).json({ error: "Erreur serveur" });
    }
  },

  // üìö Obtenir tous les briefs d‚Äôune promo
  getBriefsByPromo: async (req, res) => {
    const promo_id = req.params.id;

    try {
      const briefs = await BriefModel.getByPromo(promo_id);
      res.status(200).json(briefs);
    } catch (err) {
      console.error("Erreur lors de la r√©cup√©ration des briefs :", err);
      res.status(500).json({ error: "Erreur serveur" });
    }
  },

  // üîÑ Assigner un brief √† un groupe
  assignBriefToGroup: async (req, res) => {
    const { brief_id, group_id } = req.body;

    try {
      await BriefModel.assignToGroup(brief_id, group_id);
      res.status(200).json({ message: "Brief assign√© au groupe" });
    } catch (err) {
      console.error("Erreur lors de l‚Äôassignation du brief :", err);
      res.status(500).json({ error: "Erreur serveur" });
    }
  },

  // üë• Voir tous les groupes assign√©s √† un brief
  getGroupsForBrief: async (req, res) => {
    const brief_id = req.params.id;

    try {
      const groups = await BriefModel.getAssignedGroups(brief_id);
      res.status(200).json(groups);
    } catch (err) {
      console.error("Erreur lors de la r√©cup√©ration des groupes :", err);
      res.status(500).json({ error: "Erreur serveur" });
    }
  }
};

module.exports = BriefController;
